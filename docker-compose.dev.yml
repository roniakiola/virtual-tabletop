services:
  backend:
    build:
      target: dev
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    volumes:
      - ./backend/src:/usr/src/app/src
      - ./backend/tsconfig.json:/usr/src/app/tsconfig.json
      - ./backend/package.json:/usr/src/app/package.json
      - ./backend/package-lock.json:/usr/src/app/package-lock.json
    environment:
      - NODE_ENV=development
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis

  frontend:
    build:
      target: dev
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./frontend/src:/usr/src/app/src
      - ./frontend/tsconfig.json:/usr/src/app/tsconfig.json
      - ./frontend/package.json:/usr/src/app/package.json
      - ./frontend/package-lock.json:/usr/src/app/package-lock.json
    environment:
      - NODE_ENV=development

  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  redis:
    image: redis:7
    ports:
      - '6379:6379'

volumes:
  postgres_data:
